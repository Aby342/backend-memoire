{
	"info": {
		"_postman_id": "12345678-1234-1234-1234-123456789abc",
		"name": "API Medical Management - REST",
		"description": "Collection compl√®te pour tester l'API de gestion m√©dicale avec authentification et autorisation par r√¥les",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('auth_token', response.token);",
									"    pm.environment.set('user_id', response.user.id);",
									"    pm.environment.set('user_role', response.user.role);",
									"    console.log('Token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"Password123\",\n    \"password_confirmation\": \"Password123\",\n    \"role\": \"patient\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"register"
							]
						},
						"description": "Inscription d'un nouvel utilisateur"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('auth_token', response.token);",
									"    pm.environment.set('user_id', response.user.id);",
									"    pm.environment.set('user_role', response.user.role);",
									"    console.log('Login successful, token saved');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"login"
							]
						},
						"description": "Connexion d'un utilisateur existant"
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"user"
							]
						},
						"description": "R√©cup√©rer le profil de l'utilisateur connect√©"
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						},
						"description": "D√©connexion de l'utilisateur"
					},
					"response": []
				}
			],
			"description": "Endpoints d'authentification"
		},
		{
			"name": " Admin - User Management",
			"item": [
				{
					"name": "List All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Lister tous les utilisateurs (Admin seulement)"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Dr. Smith\",\n    \"email\": \"dr.smith@example.com\",\n    \"password\": \"Password123\",\n    \"role\": \"doctor\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Cr√©er un nouvel utilisateur (Admin seulement)"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_id}}"
							]
						},
						"description": "R√©cup√©rer un utilisateur par ID (Admin seulement)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Dr. Smith Updated\",\n    \"email\": \"dr.smith.updated@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Mettre √† jour un utilisateur (Admin seulement)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Supprimer un utilisateur (Admin seulement)"
					},
					"response": []
				}
			],
			"description": "Gestion des utilisateurs (Admin seulement)"
		},
		{
			"name": "üë®‚Äç‚öïÔ∏è Doctor Management",
			"item": [
				{
					"name": "List All Doctors",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/doctors",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"doctors"
							]
						},
						"description": "Lister tous les m√©decins"
					},
					"response": []
				},
				{
					"name": "Create Doctor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": 1,\n    \"specialite_id\": 1,\n    \"numero_ordre\": \"12345\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/doctors",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"doctors"
							]
						},
						"description": "Cr√©er un m√©decin (Admin seulement)"
					},
					"response": []
				},
				{
					"name": "Get Doctor by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/doctors/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"doctors",
								"1"
							]
						},
						"description": "R√©cup√©rer un m√©decin par ID"
					},
					"response": []
				}
			],
			"description": "Gestion des m√©decins"
		},
		{
			"name": "üë• Patient Management",
			"item": [
				{
					"name": "List All Patients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/patients",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"patients"
							]
						},
						"description": "Lister tous les patients"
					},
					"response": []
				},
				{
					"name": "Create Patient",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Jane Patient\",\n    \"email\": \"jane.patient@example.com\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/patients",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"patients"
							]
						},
						"description": "Cr√©er un patient (Admin seulement)"
					},
					"response": []
				},
				{
					"name": "Get Patient by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/patients/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"patients",
								"1"
							]
						},
						"description": "R√©cup√©rer un patient par ID"
					},
					"response": []
				}
			],
			"description": "Gestion des patients"
		},
		{
			"name": "üìÖ Appointments",
			"item": [
				{
					"name": "List Appointments (Patient)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/appointments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"appointments"
							]
						},
						"description": "Lister les rendez-vous (Patient/Doctor/Admin)"
					},
					"response": []
				},
				{
					"name": "Create Appointment (Patient)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": {{user_id}},\n    \"doctor_id\": 1,\n    \"date\": \"2024-12-25 10:00:00\",\n    \"motif\": \"Consultation g√©n√©rale\",\n    \"status\": \"pending\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/appointments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"appointments"
							]
						},
						"description": "Cr√©er un rendez-vous (Patient seulement)"
					},
					"response": []
				},
				{
					"name": "Get Appointment by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/appointments/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"appointments",
								"1"
							]
						},
						"description": "R√©cup√©rer un rendez-vous par ID"
					},
					"response": []
				},
				{
					"name": "Update Appointment (Doctor)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"completed\",\n    \"motif\": \"Consultation termin√©e avec succ√®s\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/appointments/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"appointments",
								"1"
							]
						},
						"description": "Mettre √† jour un rendez-vous (Doctor/Admin seulement)"
					},
					"response": []
				}
			],
			"description": "Gestion des rendez-vous"
		},
		{
			"name": "üíä Prescriptions",
			"item": [
				{
					"name": "List Prescriptions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/prescriptions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"prescriptions"
							]
						},
						"description": "Lister les prescriptions (Doctor/Admin)"
					},
					"response": []
				},
				{
					"name": "Create Prescription",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": {{user_id}},\n    \"doctor_id\": 1,\n    \"appointment_id\": 1,\n    \"medication\": \"Parac√©tamol 500mg\",\n    \"instructions\": \"Prendre 1 comprim√© toutes les 6 heures pendant 5 jours\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/prescriptions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"prescriptions"
							]
						},
						"description": "Cr√©er une prescription (Doctor/Admin)"
					},
					"response": []
				},
				{
					"name": "Get Prescription by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/prescriptions/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"prescriptions",
								"1"
							]
						},
						"description": "R√©cup√©rer une prescription par ID"
					},
					"response": []
				}
			],
			"description": "Gestion des prescriptions"
		},
		{
			"name": "üß™ Security Tests",
			"item": [
				{
					"name": "Test Rate Limiting - Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"Password123\",\n    \"password_confirmation\": \"Password123\",\n    \"role\": \"patient\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"register"
							]
						},
						"description": "Tester la limitation de taux sur l'inscription (5 req/min)"
					},
					"response": []
				},
				{
					"name": "Test Unauthorized Access",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Tester l'acc√®s non autoris√© (sans token)"
					},
					"response": []
				},
				{
					"name": "Test Invalid Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid_token_here"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"user"
							]
						},
						"description": "Tester avec un token invalide"
					},
					"response": []
				},
				{
					"name": "Test Role Authorization - Patient accessing Admin",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Tester l'autorisation par r√¥le (Patient essayant d'acc√©der aux fonctions Admin)"
					},
					"response": []
				}
			],
			"description": "Tests de s√©curit√© et d'autorisation"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-set base URL if not set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://127.0.0.1:8000');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test to log response time",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"// Global test to check for security headers",
					"pm.test('Security headers are present', function () {",
					"    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
					"    pm.expect(pm.response.headers.get('X-Frame-Options')).to.eql('DENY');",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		}
	]
}





